pipeline {
    agent any
    stages {
        stage('Nettoyage et compilation Maven') {
            steps {
                // Cette Ã©tape va nettoyer et compiler le projet avec Maven
                sh 'mvn clean install'
            }
        }
        //stage('SonarQube analyse') {
            //steps {
             // script {
                  // withSonarQubeEnv(installationName: 'sq1') {
                     //  sh 'mvn sonar:sonar'
                 //  }
               //}
             //}
      // }
       // stage('Junit test') {
           // steps {
              // script {
                       //sh 'mvn test -Dtest=true'
                    // }
               //  }
          // }

// stage('Deploy') {
  //          steps {
   //            script {
     //                  sh 'mvn deploy -Dtest=true'
       //              }
         //}
           //}
    stage('Login') {
             steps {
                 script {
                     withCredentials([usernamePassword(credentialsId: 'bd8f8541-6393-45c3-913d-da6aad2a47b5', usernameVariable: 'eya20', passwordVariable: 'Qsdfghjklm123')]) {
                        sh "echo \${PASSWORD} | docker login --username \${USERNAME} --password-stdin"
                 }
             }
         }
             stage('Build et Push Docker Image') {
     steps {
         script {
             // Construire l'image Docker
             sh 'docker build -t eya20/kaddem:latest .'
         }
         }
                 }
         stage('Push vers DockerHub') {
     steps {
         script {
             sh 'docker push eya20/kaddem:latest'
         }
    }
 }
    //       stage('Docker compose') {
    // steps {
    //     script {
           
    //         sh 'sudo docker compose up'
    //     }
    //     }
   


    //       }


       }
   }

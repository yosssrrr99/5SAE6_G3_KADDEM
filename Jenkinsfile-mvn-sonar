


       pipeline {
    agent any
    stages {
        stage('Nettoyage et compilation Maven') {
            steps {
                // Cette étape va nettoyer et compiler le projet avec Maven
                sh 'mvn clean compile'
            }
        }
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }
           stage('Junit test') {
           steps {
               script {
                       sh 'mvn test'
                      }
                }
           }
         stage('Nettoyage et install ') {
            steps {
                // Cette étape va nettoyer et compiler le projet avec Maven
                sh 'mvn clean install'
            }
        }
        stage('SonarQube analyse') {
            steps {
               script {
                    withSonarQubeEnv(installationName: 'sq1') {
                        sh 'mvn sonar:sonar'
                    }
                }
              }
         }
     
       stage('Build and Deploy nexus') {
            steps {
                script {
                    sh 'mvn clean deploy -DskipTests=true'
                }
           }
        }
          stage('Login') {
            steps {
                script {
                    sh 'echo "Qsdfghjklm123" |  docker login --username eya20  --password-stdin'
                }
            }
        }
            stage('Build et Push Docker Image') {
    steps {
        script {
            // Construire l'image Docker
            sh 'docker build -t eya20/kaddem:latest .'
        }
        }
                }
         stage('Push vers DockerHub') {
    steps {
        script {
            sh 'docker push eya20/kaddem:latest'
        }
    }
}
          stage('Docker compose') {
    steps {
        script {
           
            sh 'sudo docker compose up'
        }
        }
   


    //       }
       }
   }
   
